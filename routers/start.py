from aiogram import Router, Bot, F
from aiogram.enums import ParseMode
from aiogram.filters import Command, CommandStart, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReactionTypeEmoji
from loguru import logger
from sqlalchemy.orm import Session

from db.requests import db_save_bot_user
from middlewares.sentry_error_handler import sentry_error_handler
from utils.global_data import MTLChats, update_command_info
from utils.stellar_utils import MTLAddresses

router = Router()
router.error()(sentry_error_handler)

startmsg = """
–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∏–∑ <a href="https://montelibero.org">–ú–æ–Ω—Ç–µ–ª–∏–±–µ—Ä–æ</a>.
–ü–æ–º–æ–≥–∞—é —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –∑–∞–¥–∞—á–∞–º–∏, –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ –º–æ–∂–µ–º –ø–æ–æ–±—â–∞—Ç—å—Å—è.
–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ, —á—Ç–æ —è —É–º–µ—é, –Ω–∞–±–µ—Ä–∏—Ç–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ @mymtlbot –∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã
"""

link_stellar = "https://stellar.expert/explorer/public/account/"
link_json = "https://raw.githubusercontent.com/montelibero-org/mtl/main/json/"

links_msg = f"""
–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏

[–û—Ç—á–µ—Ç –ø–æ —Ñ–æ–Ω–¥—É](https://docs.google.com/spreadsheets/d/1fTOWq7JqX24YEqhCZTQ-z8IICPpgBHXcj91moxkT6R4/edit#gid=1372993507)
[–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤](https://docs.google.com/spreadsheets/d/1x3E1ai_kPVMQ85nuGwuTq1bXD051fnVlf0Dz9NaFoq0)
–¢—É–ª–∑—ã [–¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è](mtl.ergvein.net/) / [—Ä–∞—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤ –∏ –¥–∏–≤–æ–≤](https://ncrashed.github.io/dividend-tools/votes/)
[–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è](https://laboratory.stellar.org/#?network=public)
–°—Å—ã–ª–∫–∏ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ã —Ñ–æ–Ω–¥–∞ / [–≠–º–∏—Ç–µ–Ω—Ç]({link_stellar}{MTLAddresses.public_issuer}) /  [–ó–∞–ª–æ–≥–æ–≤—ã–π —Å—á–µ—Ç]({link_stellar}{MTLAddresses.public_pawnshop})
–°—Ç–∞–∫–∞–Ω –Ω–∞ [–º—É–ª—å–∫–∏](https://stellar.expert/explorer/public/market/EURMTL-GACKTN5DAZGWXRWB2WLM6OPBDHAMT6SJNGLJZPQMEZBUR4JUGBX2UK7V/XLM) [mtl](https://stellar.expert/explorer/public/market/EURMTL-GACKTN5DAZGWXRWB2WLM6OPBDHAMT6SJNGLJZPQMEZBUR4JUGBX2UK7V/MTL-GACKTN5DAZGWXRWB2WLM6OPBDHAMT6SJNGLJZPQMEZBUR4JUGBX2UK7V)
–°–ø–∏—Å–∫–∏ [—á–µ—Ä–Ω—ã–π]({link_json}blacklist.json) / [BL for DG]({link_json}dg_blacklist.json) 
–ë–æ—Ç—ã [–û–±–º–µ–Ω eurmtl_xlm]({link_stellar}{MTLAddresses.public_exchange_eurmtl_xlm}) / \
[–û–±–º–µ–Ω eurmtl_usdc]({link_stellar}{MTLAddresses.public_exchange_eurmtl_usdm}) / \
[–û–±–º–µ–Ω usdm_sats]({link_stellar}{MTLAddresses.public_exchange_usdm_sats}) / \
[–û–±–º–µ–Ω usdm_mtlfarm]({link_stellar}{MTLAddresses.public_exchange_usdm_mtlfarm}) / \
[–î–∏–≤–∏–¥–µ–Ω–¥—ã]({link_stellar}GDNHQWZRZDZZBARNOH6VFFXMN6LBUNZTZHOKBUT7GREOWBTZI4FGS7IQ/) / \
[BIM-XLM]({link_stellar}GARUNHJH3U5LCO573JSZU4IOBEVQL6OJAAPISN4JKBG2IYUGLLVPX5OH) / \
[BIM-EURMTL]({link_stellar}GDEK5KGFA3WCG3F2MLSXFGLR4T4M6W6BMGWY6FBDSDQM6HXFMRSTEWBW) / \
[Wallet]({link_stellar}GB72L53HPZ2MNZQY4XEXULRD6AHYLK4CO55YTOBZUEORW2ZTSOEQ4MTL) / \
[–ë–æ—Ç —Å–∂–∏–≥–∞–Ω–∏—è]({link_stellar}GD44EAUQXNUVBJACZMW6GPT2GZ7I26EDQCU5HGKUTVEQTXIDEVGUFIRE) 
–í–∏–¥–µ–æ [–ö–∞–∫ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å](https://t.me/MTL_production/26) / [–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä—è—Ç—å](https://t.me/MTL_production/27) / [–ö–∞–∫ —Å–∫–ª–µ–∏—Ç—å\—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏](https://t.me/MTL_production/28)
"""


@update_command_info("/start", "–Ω–∞—á–∞—Ç—å –≤—Å–µ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞")
@router.message(F.text.lower() == "/start", F.chat.type == "private")
async def cmd_start(message: Message, state: FSMContext, session: Session, bot: Bot):
    await state.clear()
    db_save_bot_user(session, message.from_user.id, message.from_user.username)
    await message.reply(startmsg)
    #await bot.set_message_reaction(message.chat.id, message.message_id, ["üî•"])
    #if message.reply_to_message:
    #    await message.reply_to_message.react([ReactionTypeEmoji(emoji="üëé")])
    #await bot.set_message_reaction(
    #    chat_id=message.chat.id,
    #    message_id=message.message_id,
    #    reaction=[ReactionTypeEmoji(emoji="üëç"), ReactionTypeEmoji(emoji="üëé")],
    #)



@router.message(Command(commands=["save"]))
async def cmd_save(message: Message):
    logger.info(f'{message.json()}')
    if message.from_user.id == MTLChats.ITolstov:
        await message.answer("–ì–æ—Ç–æ–≤–æ")
    else:
        await message.answer('Saved')


@update_command_info("/links", "–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏")
@router.message(Command(commands=["links"]))
async def cmd_links(message: Message):
    await message.answer(links_msg, parse_mode=ParseMode.MARKDOWN)


@update_command_info("/show_id", "–ü–æ–∫–∞–∑–∞—Ç—å ID —á–∞—Ç–∞")
@router.message(Command(commands=["show_id"]))
async def cmd_show_id(message: Message):
    await message.answer(f"chat_id = {message.chat.id} message_thread_id = {message.message_thread_id} " +
                         f"is_topic_message  = {message.is_topic_message}")


@router.message(Command(commands=["me"]))
async def cmd_me(message: Message, bot: Bot):
    msg = ' '.join(message.text.split(' ')[1:])
    msg = f'<i><b>{message.from_user.username}</b> {msg}</i>'
    await bot.send_message(chat_id=message.chat.id, text=msg, parse_mode=ParseMode.HTML,
                           reply_to_message_id=message.reply_to_message.message_id if message.reply_to_message else None,
                           message_thread_id=None if message.reply_to_message else message.message_thread_id)
    try:
        await message.delete()
    except:
        pass
